apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    ndkVersion rootProject.ndkVersion

    defaultConfig {
        applicationId "com.dimi.moviedatabase"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.dimi.moviedatabase.HiltTestRunner"
        // old testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        // ukoliko imas optIn experimented kao na pagingRemoteMediator freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        test.resources.srcDirs += 'src/test/res'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "androidx.appcompat:appcompat:$supportLibVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshVersion"

    implementation "androidx.datastore:datastore-preferences:$dataStoreVersion"

    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltViewModels"
    kapt "androidx.hilt:hilt-compiler:$hiltViewModels"

    implementation "androidx.paging:paging-runtime:$pagingVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataKtxVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    implementation("com.squareup.okhttp3:okhttp:$okHttpVersion")
    implementation("com.squareup.okhttp3:logging-interceptor:$okHttpVersion")

    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "com.google.android.material:material:$materialVersion"

    implementation "com.afollestad.material-dialogs:core:$materialDialogsVersion"

    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.pierfrancescosoffritti.androidyoutubeplayer:core:$youtubeVersion"


    // local unit testing
    implementation "androidx.test:core:$androidXCoreTest"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.arch.core:core-testing:$archCoreTesting"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$testCoroutines"

    // instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$androidXJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$testCoroutines"
    androidTestImplementation "com.google.truth:truth:$truthVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archCoreTesting"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentTesting"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'

}